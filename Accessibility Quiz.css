@media (prefers-reduced-motion: no-preference) {
    /* I'm not sure how this works, but perhaps it interacts with the users' preference */
    * {
      scroll-behavior: smooth;
      /* This smoothens out the scroll behavior of the browser when clicking in nav buttons */
    }
  }
  
  body {
    background: #f5f6f7;
    color: #1b1b32;
    font-family: Helvetica;
    margin: 0;
  }
  
  header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    top: 0;
    /* Position and Top properties here fixes the header on top despite scrolling up or down; top with a value of 0 - i'm quite unsure with this */
  }
  
  #logo {
    width: max(100px, 18vw);
    /* The general purpose of max() is to make the selector responsive; so far, this returns the largest positive value */
    background-color: #0a0a23;
    aspect-ratio: 35 / 4;
    /* simple aspect ratio knowledge */
    padding: 0.4rem;
  }
  
  h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
    text-align: center;
  }
  
  nav {
    width: 50%;
    max-width: 300px;
    height: 50px;
  }
  
  nav > ul {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    align-items: center;
    padding-inline-start: 0;
    /* first encounter of this property */
    margin-block: 0;
    /* same goes with this one^^ */
    height: 100%;
  }
  
  nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;
  }
  
  nav > ul > li:hover {
    /* sets rule set for when hovering lists under ul which is under nav */
    background-color: #dfdfe2;
    color: #1b1b32;
    cursor: pointer;
  }
  
  li > a {
    color: inherit;
    /* inherits the color from the parent element */
    text-decoration: none;
  }
  
  main {
    padding-top: 50px;
  }
  
  section {
    width: 80%;
    margin: 0 auto 10px auto;
    max-width: 600px;
  }
  
  h1,
  h2 {
    font-family: Verdana, Tahoma;
  }
  
  h2 {
    border-bottom: 4px solid #dfdfe2;
    margin-top: 0px;
    padding-top: 60px;
  }
  
  .info {
    padding: 10px 0 0 5px;
  }
  
  .formrow {
    margin-top: 30px;
    padding: 0px 15px;
  }
  
  input {
    font-size: 16px;
  }
  
  .info label, .info input {
    display: inline-block;
  }
  
  .info input {
    width: 50%;
    text-align: left;
  }
  
  .info label {
    width: 10%;
    min-width: 55px;
    text-align: right;
  }
  
  .question-block {
    text-align: left;
    display: block;
    width: 100%;
    margin-top: 20px;
    padding-top: 5px;
  }
  
  p {
    margin-top: 5px;
    padding-left: 15px;
    font-size: 20px;
  }
  
  p::before {
    content: "Question #";
    /* ::before simply puts the rule set before the specified selector. in this case, it's p */
  }
  
  .question {
    border: none;
    padding-bottom: 0;
  }
  
  .answers-list {
    list-style: none;
    /* applies to list items (li); styles all li at once; this basically adds bullet points */
    padding: 0;
  }
  
  button {
    display: block;
    margin: 40px auto;
    width: 40%;
    padding: 15px;
    font-size: 23px;
    background: #d0d0d5;
    border: 3px solid #3b3b4f;
  }
  
  footer {
    background-color: #2a2a40;
    display: flex;
    justify-content: center;
  }
  
  footer,
  footer a {
    color: #dfdfe2;
  }
  
  address {
    text-align: center;
    padding: 0.3em;
  }
  
  .sr-only {
    position: absolute;
    /* basically tells how an element is positioned. this specific case makes the element somewhat on top of the contents */
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    /* goes below the default value of margin */
    overflow: hidden;
    /* this specific rule specifies that, with respect to vertical and horizontal directions, the content will be hidden if it does not fit in the parameters */
    clip: rect(0, 0, 0, 0);
    /* clip-path is the new name for this property; only applies to absolute or fixed positions; defines a visible portion of an element */
    white-space: nowrap;
    /* edits the whitespace of the element; in this case, it does not wrap to the next line */
    border: 0;
  }
  